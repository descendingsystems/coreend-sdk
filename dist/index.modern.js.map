{"version":3,"file":"index.modern.js","sources":["../src/helper.ts","../src/index.ts"],"sourcesContent":["export function isBrowser() {\n  return typeof window !== 'undefined';\n}\n","import axios, { AxiosInstance, AxiosRequestHeaders } from 'axios';\nimport { isBrowser } from './helper';\n\ntype SDKInstance = {\n  initialized: boolean;\n  projectId: number;\n  api: AxiosInstance;\n};\n\nconst instance: SDKInstance = {\n  initialized: false,\n  projectId: -1,\n  api: axios.create(),\n};\n\n// General\nexport function initCoreEnd(projectId: number) {\n  if (instance.initialized) throw new Error('[COREEND] SDK has already been initialized');\n\n  instance.projectId = projectId;\n  instance.api = axios.create({\n    baseURL: `https://api.coreend.tech/v1/projects/${projectId}/`,\n  });\n  instance.initialized = true;\n}\n\nfunction enforceIsInitialized() {\n  if (!instance.initialized) throw new Error('[COREEND] SDK has not been initialized');\n}\n\n// Resource Docs\nexport function resourceDocs(resourceId: number) {\n  enforceIsInitialized();\n\n  async function get({\n    id,\n    page,\n    requireAuth,\n  }: { id?: number; page?: number; requireAuth?: boolean } = {}): Promise<\n    | { error: null; items: Record<string, any>[] | Record<string, any> }\n    | { error: any; items: null }\n  > {\n    try {\n      const withId = typeof id === 'number' ? id : '';\n      const withPage = typeof page === 'number' ? `page=${page}` : '';\n      const withQuries = `${withPage}`;\n\n      const configHeaders: AxiosRequestHeaders = {};\n\n      if (requireAuth) {\n        const authInstance = authentication();\n        const accessTokenRes = await authInstance.getAccessToken();\n\n        if (accessTokenRes.error)\n          throw new Error(`Can not get access token: ${accessTokenRes.error}`);\n\n        configHeaders.Authorization = `Bearer ${accessTokenRes.accessToken}`;\n      }\n\n      const result = await instance.api.get(\n        `resources/${resourceId}/docs/${withId}?${withQuries}`,\n        { headers: configHeaders }\n      );\n      const data = result.data as any;\n\n      return { error: null, items: data };\n    } catch (error) {\n      return { error, items: null };\n    }\n  }\n\n  async function create(\n    item: Record<string, any>,\n    requireAuth = false,\n    hCaptchaResponse = ''\n  ): Promise<{ error: null; id: number } | { error: any; id: null }> {\n    try {\n      const configHeaders: AxiosRequestHeaders = {};\n\n      if (requireAuth) {\n        const authInstance = authentication();\n        const accessTokenRes = await authInstance.getAccessToken();\n\n        if (accessTokenRes.error)\n          throw new Error(`Can not get access token: ${accessTokenRes.error}`);\n\n        configHeaders.Authorization = `Bearer ${accessTokenRes.accessToken}`;\n      }\n\n      const withHCaptchaResponse = hCaptchaResponse ? `hcaptchaResponse=${hCaptchaResponse}&` : '';\n      const withQuries = `${withHCaptchaResponse}`;\n\n      const result = await instance.api.post(\n        `resources/${resourceId}/docs?${withQuries}`,\n        { data: item },\n        {\n          headers: configHeaders,\n        }\n      );\n\n      const data = result.data as number;\n\n      return { error: null, id: data };\n    } catch (error) {\n      return { error, id: null };\n    }\n  }\n\n  async function update(\n    item: Record<string, any>,\n    requireAuth = false\n  ): Promise<{ error: null } | { error: any }> {\n    try {\n      const configHeaders: AxiosRequestHeaders = {};\n\n      if (requireAuth) {\n        const authInstance = authentication();\n        const accessTokenRes = await authInstance.getAccessToken();\n\n        if (accessTokenRes.error)\n          throw new Error(`Can not get access token: ${accessTokenRes.error}`);\n\n        configHeaders.Authorization = `Bearer ${accessTokenRes.accessToken}`;\n      }\n\n      await instance.api.put(\n        `resources/${resourceId}/docs`,\n        { data: item },\n        { headers: configHeaders }\n      );\n\n      return { error: null };\n    } catch (error) {\n      return { error };\n    }\n  }\n\n  async function remove(\n    id: number,\n    requireAuth = false\n  ): Promise<{ error: null } | { error: any }> {\n    try {\n      const configHeaders: AxiosRequestHeaders = {};\n\n      if (requireAuth) {\n        const authInstance = authentication();\n        const accessTokenRes = await authInstance.getAccessToken();\n\n        if (accessTokenRes.error)\n          throw new Error(`Can not get access token: ${accessTokenRes.error}`);\n\n        configHeaders.Authorization = `Bearer ${accessTokenRes.accessToken}`;\n      }\n\n      await instance.api.delete(`resources/${resourceId}/docs/${id}`, { headers: configHeaders });\n\n      return { error: null };\n    } catch (error) {\n      return { error };\n    }\n  }\n\n  return { get, create, update, remove };\n}\n\n// Authentication\ntype signedInUser = {\n  isSignedIn: boolean;\n  accessToken: string;\n  refreshToken: string;\n  expiresOn: number;\n};\n\ntype Profile = {\n  uid: string;\n  email: string;\n};\n\nconst signedInUser: signedInUser = {\n  isSignedIn: false,\n  accessToken: '',\n  refreshToken: '',\n  expiresOn: 0,\n};\n\nexport function authentication() {\n  enforceIsInitialized();\n\n  const defaultAccessTokenExpirationInMin = 15;\n  const defaultLocalStorageRefreshTokenKey = 'coreend-sdk-authentication-refreshToken';\n\n  if (!signedInUser.isSignedIn && isBrowser()) {\n    const refreshToken = window.localStorage.getItem(defaultLocalStorageRefreshTokenKey);\n\n    if (refreshToken) {\n      signedInUser.refreshToken = refreshToken;\n      signedInUser.isSignedIn = true;\n    }\n  }\n\n  function isSignedIn() {\n    return signedInUser.isSignedIn;\n  }\n\n  async function getAccessToken(): Promise<\n    { error: null; accessToken: string } | { error: any; accessToken: null }\n  > {\n    try {\n      if (!isSignedIn()) throw new Error('Not signed in');\n\n      // Renew access token if close to expiration\n      if (Date.now() >= signedInUser.expiresOn - 1000 * 30) {\n        const renewStatus = await renew();\n\n        if (renewStatus.error) {\n          await logout();\n          throw new Error('Could not renew access token');\n        }\n      }\n\n      return { error: null, accessToken: signedInUser.accessToken };\n    } catch (error) {\n      await logout();\n      return { error, accessToken: null };\n    }\n  }\n\n  async function login(email: string): Promise<{ error: null } | { error: any }> {\n    try {\n      if (isSignedIn()) throw new Error('Already signed in');\n\n      await instance.api.post(`auth/login`, {\n        email,\n      });\n\n      return { error: null };\n    } catch (error) {\n      return { error };\n    }\n  }\n\n  async function verify(email: string, otp: string): Promise<{ error: null } | { error: any }> {\n    try {\n      if (isSignedIn()) throw new Error('Already signed in');\n\n      const res = await instance.api.post(`auth/verify`, {\n        email,\n        otp,\n      });\n\n      signedInUser.accessToken = res.data.accessToken || '';\n      signedInUser.refreshToken = res.data.refreshToken || '';\n      signedInUser.expiresOn = Date.now() + 60000 * defaultAccessTokenExpirationInMin;\n      signedInUser.isSignedIn = true;\n\n      if (!signedInUser.accessToken || !signedInUser.refreshToken)\n        throw new Error('Could not sign in');\n\n      if (isBrowser())\n        window.localStorage.setItem(defaultLocalStorageRefreshTokenKey, signedInUser.refreshToken);\n\n      return { error: null };\n    } catch (error) {\n      return { error };\n    }\n  }\n\n  async function profile(): Promise<\n    { error: null; profile: Profile } | { error: any; profile: null }\n  > {\n    try {\n      if (!isSignedIn()) throw new Error('Not signed in');\n      const accessTokenRes = await getAccessToken();\n\n      if (accessTokenRes.error)\n        throw new Error(`Can not get access token: ${accessTokenRes.error}`);\n\n      const res = await instance.api.get(`auth/profile`, {\n        headers: {\n          Authorization: `Bearer ${accessTokenRes.accessToken}`,\n        },\n      });\n\n      const profile = {\n        uid: res.data.uid || '',\n        email: res.data.email || '',\n      };\n\n      if (!profile.uid || !profile.email) throw new Error('Could not get profile');\n\n      return { error: null, profile };\n    } catch (error) {\n      return { error, profile: null };\n    }\n  }\n\n  async function renew(): Promise<{ error: null } | { error: any }> {\n    try {\n      if (!isSignedIn()) throw new Error('Not signed in');\n\n      const res = await instance.api.post(`auth/renew`, {\n        refreshToken: signedInUser.refreshToken,\n      });\n\n      signedInUser.accessToken = res.data.accessToken;\n      signedInUser.expiresOn = Date.now() + 60000 * defaultAccessTokenExpirationInMin;\n\n      return { error: null };\n    } catch (error) {\n      await logout();\n      return { error };\n    }\n  }\n\n  async function invalidate(): Promise<{ error: null } | { error: any }> {\n    try {\n      if (!isSignedIn()) throw new Error('Not signed in');\n\n      await instance.api.post(`auth/invalidate`, {\n        refreshToken: signedInUser.refreshToken,\n      });\n\n      return { error: null };\n    } catch (error) {\n      return { error };\n    } finally {\n      await logout();\n    }\n  }\n\n  async function remove(): Promise<{ error: null } | { error: any }> {\n    try {\n      if (!isSignedIn()) throw new Error('Not signed in');\n      const accessTokenRes = await getAccessToken();\n\n      if (accessTokenRes.error)\n        throw new Error(`Can not get access token: ${accessTokenRes.error}`);\n\n      await instance.api.delete(`auth/remove`, {\n        headers: {\n          Authorization: `Bearer ${accessTokenRes.accessToken}`,\n        },\n      });\n\n      return { error: null };\n    } catch (error) {\n      return { error };\n    } finally {\n      await logout();\n    }\n  }\n\n  async function logout(): Promise<{ error: null } | { error: any }> {\n    try {\n      if (!isSignedIn()) throw new Error('Not signed in');\n\n      if (isBrowser()) window.localStorage.removeItem(defaultLocalStorageRefreshTokenKey);\n\n      signedInUser.isSignedIn = false;\n      signedInUser.accessToken = '';\n      signedInUser.refreshToken = '';\n      signedInUser.expiresOn = 0;\n\n      return { error: null };\n    } catch (error) {\n      return { error };\n    }\n  }\n\n  return {\n    isSignedIn,\n    getAccessToken,\n    login,\n    verify,\n    profile,\n    renew,\n    invalidate,\n    remove,\n    logout,\n  };\n}\n\n// Storage Files\nexport function storageFiles(storageId: number) {\n  enforceIsInitialized();\n\n  async function get(\n    fileName: string,\n    requireAuth = false\n  ): Promise<{ error: null; url: any } | { error: any; url: null }> {\n    try {\n      const configHeaders: AxiosRequestHeaders = {};\n\n      if (requireAuth) {\n        const authInstance = authentication();\n        const accessTokenRes = await authInstance.getAccessToken();\n\n        if (accessTokenRes.error)\n          throw new Error(`Can not get access token: ${accessTokenRes.error}`);\n\n        configHeaders.Authorization = `Bearer ${accessTokenRes.accessToken}`;\n      }\n\n      const result = await instance.api.get(`storages/${storageId}/files/${fileName}`, {\n        headers: configHeaders,\n      });\n      const data = result.data as { url: string };\n\n      return { error: null, url: data.url };\n    } catch (error) {\n      return { error, url: null };\n    }\n  }\n\n  async function create(\n    file: File,\n    fileName?: string,\n    requireAuth = false,\n    hCaptchaResponse = ''\n  ): Promise<{ error: null } | { error: any }> {\n    try {\n      const configHeaders: AxiosRequestHeaders = {};\n\n      if (requireAuth) {\n        const authInstance = authentication();\n        const accessTokenRes = await authInstance.getAccessToken();\n\n        if (accessTokenRes.error)\n          throw new Error(`Can not get access token: ${accessTokenRes.error}`);\n\n        configHeaders.Authorization = `Bearer ${accessTokenRes.accessToken}`;\n      }\n\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('fileName', fileName || file.name);\n\n      const withHCaptchaResponse = hCaptchaResponse ? `hcaptchaResponse=${hCaptchaResponse}&` : '';\n      const withQuries = `${withHCaptchaResponse}`;\n\n      await instance.api.post(`storages/${storageId}/files?${withQuries}`, formData, {\n        headers: configHeaders,\n      });\n\n      return { error: null };\n    } catch (error) {\n      return { error };\n    }\n  }\n\n  async function remove(\n    fileName: string,\n    requireAuth = false\n  ): Promise<{ error: null } | { error: any }> {\n    try {\n      const configHeaders: AxiosRequestHeaders = {};\n\n      if (requireAuth) {\n        const authInstance = authentication();\n        const accessTokenRes = await authInstance.getAccessToken();\n\n        if (accessTokenRes.error)\n          throw new Error(`Can not get access token: ${accessTokenRes.error}`);\n\n        configHeaders.Authorization = `Bearer ${accessTokenRes.accessToken}`;\n      }\n\n      await instance.api.delete(`storages/${storageId}/files/${fileName}`, {\n        headers: configHeaders,\n      });\n\n      return { error: null };\n    } catch (error) {\n      return { error };\n    }\n  }\n\n  return { get, create, remove };\n}\n"],"names":["window","instance","initialized","projectId","api","axios","create","initCoreEnd","Error","baseURL","enforceIsInitialized","resourceDocs","resourceId","get","async","id","page","requireAuth","withId","authInstance","authentication","accessTokenRes","getAccessToken","error","configHeaders","Authorization","accessToken","items","withQuries","headers","data","item","hCaptchaResponse","post","update","put","remove","delete","signedInUser","isSignedIn","refreshToken","expiresOn","defaultLocalStorageRefreshTokenKey","isBrowser","localStorage","getItem","Date","now","renew","logout","res","removeItem","login","email","verify","otp","setItem","profile","uid","invalidate","storageFiles","storageId","fileName","url","file","formData","FormData","append","name"],"mappings":"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"}